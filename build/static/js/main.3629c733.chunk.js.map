{"version":3,"sources":["components/CurrencyLabel.js","components/CurrencySelect.js","App.js","index.js"],"names":["CurrencyLabel","props","topUrl","topListString","cryptoPriceList","Name","Value","priceUrl","useState","topList","setTopList","price","setPrice","useEffect","getTopList","axios","get","then","response","data","interval","setInterval","clearInterval","i","Data","CoinInfo","updateTopUrl","getPrice","undefined","currency","getCurrencySymbol","className","map","list","index","CurrencySelect","state","handleChange","bind","e","this","setState","target","value","onChange","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"6UAkHeA,MA7Gf,SAAuBC,GACrB,IAEMC,EAAM,0FADV,oEAEEC,EAAgB,GAChBC,EAAkB,CACpB,CAAEC,KAAM,GAAIC,MAAO,IACnB,CAAED,KAAM,GAAIC,MAAO,IACnB,CAAED,KAAM,GAAIC,MAAO,IACnB,CAAED,KAAM,GAAIC,MAAO,IACnB,CAAED,KAAM,GAAIC,MAAO,IACnB,CAAED,KAAM,GAAIC,MAAO,IACnB,CAAED,KAAM,GAAIC,MAAO,IACnB,CAAED,KAAM,GAAIC,MAAO,IACnB,CAAED,KAAM,GAAIC,MAAO,IACnB,CAAED,KAAM,GAAIC,MAAO,KAGjBC,EAAQ,kEAA8DJ,EAA9D,sBAlBgB,EAoBEK,mBAAS,MApBX,mBAoBrBC,EApBqB,KAoBZC,EApBY,OAqBFF,mBAAS,MArBP,mBAqBrBG,EArBqB,KAqBdC,EArBc,KAoE5B,GA5CAC,qBAAU,WACR,SAASC,IACPC,IAAMC,IAAId,GAAQe,MAAK,SAACC,GACtBR,EAAWQ,EAASC,SAGxBL,IACA,IAAMM,EAAWC,aAAY,kBAAMP,MAAc,MACjD,OAAO,WACLQ,cAAcF,MAEf,CAAClB,IAGJ,WACE,GAAIO,EAAS,CACXN,EAAgB,GAChB,IAAK,IAAIoB,EAAI,EAAGA,EAAI,GAAIA,IACtBpB,GAAiBM,EAAQe,KAAKD,GAAGE,SAASpB,KAC1CD,EAAgBmB,GAAGlB,KAAOI,EAAQe,KAAKD,GAAGE,SAASpB,KAC/CkB,EAAI,IACNpB,GAAiB,KAGrBI,EAAQ,kEAA8DJ,EAA9D,uBAIZuB,GAGAb,qBAAU,WACR,SAASc,IACPZ,IAAMC,IAAIT,GAAUU,MAAK,SAACC,GACxBN,EAASM,EAASC,SAGtBQ,IACA,IAAMP,EAAWC,aAAY,kBAAMM,MAAY,KAC/C,OAAO,WACLL,cAAcF,MAEf,CAACb,IAEAI,EACF,IAAK,IAAIY,EAAI,EAAGA,EAAI,GAAIA,SACiBK,IAAnCjB,EAAMP,EAAgBmB,GAAGlB,QAC3BD,EAAgBmB,GAAGjB,MACjBK,EAAMP,EAAgBmB,GAAGlB,MAAMJ,EAAM4B,WAK7C,SAASC,IACP,OAAQ7B,EAAM4B,UACZ,IAAK,MACH,MAAO,IACT,IAAK,MACH,MAAO,SACT,IAAK,MACH,MAAO,KACT,QACE,MAAO,IAIb,OACE,qBAAKE,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACG3B,EAAgB4B,KAAI,SAACC,EAAMC,GAAP,OACnB,oBAAgBH,UAAU,8BAA1B,SACE,uBAAMA,UAAU,mBAAhB,UACE,qBAAKA,UAAU,OAAf,SAAuBE,EAAK5B,OAC5B,sBAAK0B,UAAU,QAAf,UACGD,IACAG,EAAK3B,aALH4B,WC7DJC,G,wDAhCb,WAAYlC,GAAQ,IAAD,8BACjB,cAAMA,IACDmC,MAAQ,CACXP,SAAU,OAEZ,EAAKQ,aAAe,EAAKA,aAAaC,KAAlB,gBALH,E,yDASNC,GAEXC,KAAKC,SAAS,CAAEZ,SAAUU,EAAEG,OAAOC,U,+BAInC,OACE,gCACE,yBACEZ,UAAU,mBACVY,MAAOH,KAAKJ,MAAMP,SAClBe,SAAUJ,KAAKH,aAHjB,UAKE,wBAAQM,MAAM,MAAd,kBACA,wBAAQA,MAAM,MAAd,uBACA,wBAAQA,MAAM,MAAd,qBAEF,cAAC,EAAD,CAAed,SAAUW,KAAKJ,MAAMP,kB,GA3BfgB,IAAMC,YCOpBC,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCDNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3629c733.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./CurrencyLabel.css\";\n\nfunction CurrencyLabel(props) {\n  const apiKey =\n    \"e8fdb631f939492140c14ded70df8656d6730d6539cd30bfa14eeb7a1e3fb0a0\";\n  const topUrl = `https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD&api_key=${apiKey}`;\n  let topListString = \"\";\n  let cryptoPriceList = [\n    { Name: \"\", Value: \"\" },\n    { Name: \"\", Value: \"\" },\n    { Name: \"\", Value: \"\" },\n    { Name: \"\", Value: \"\" },\n    { Name: \"\", Value: \"\" },\n    { Name: \"\", Value: \"\" },\n    { Name: \"\", Value: \"\" },\n    { Name: \"\", Value: \"\" },\n    { Name: \"\", Value: \"\" },\n    { Name: \"\", Value: \"\" },\n  ];\n\n  let priceUrl = `https://min-api.cryptocompare.com/data/pricemulti?fsyms=${topListString}&tsyms=USD,EUR,CAD`;\n\n  const [topList, setTopList] = useState(null);\n  const [price, setPrice] = useState(null);\n\n  //fetch top 10 crypto cap, refresh every 120 sec\n  useEffect(() => {\n    function getTopList() {\n      axios.get(topUrl).then((response) => {\n        setTopList(response.data);\n      });\n    }\n    getTopList();\n    const interval = setInterval(() => getTopList(), 120000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [topUrl]);\n\n  //translate top 10 crypto list to string for priceUrl\n  function updateTopUrl() {\n    if (topList) {\n      topListString = \"\";\n      for (let i = 0; i < 10; i++) {\n        topListString += topList.Data[i].CoinInfo.Name;\n        cryptoPriceList[i].Name = topList.Data[i].CoinInfo.Name;\n        if (i < 9) {\n          topListString += \",\";\n        }\n      }\n      priceUrl = `https://min-api.cryptocompare.com/data/pricemulti?fsyms=${topListString}&tsyms=USD,EUR,CAD`;\n    }\n  }\n\n  updateTopUrl();\n\n  //fetch multiple crypto price, refresh every 2 sec\n  useEffect(() => {\n    function getPrice() {\n      axios.get(priceUrl).then((response) => {\n        setPrice(response.data);\n      });\n    }\n    getPrice();\n    const interval = setInterval(() => getPrice(), 2000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [priceUrl]);\n\n  if (price) {\n    for (let i = 0; i < 10; i++) {\n      if (price[cryptoPriceList[i].Name] !== undefined) {\n        cryptoPriceList[i].Value =\n          price[cryptoPriceList[i].Name][props.currency];\n      }\n    }\n  }\n\n  function getCurrencySymbol() {\n    switch (props.currency) {\n      case \"USD\":\n        return \"$\";\n      case \"EUR\":\n        return \"€\";\n      case \"CAD\":\n        return \"C$\";\n      default:\n        return \"\";\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        {cryptoPriceList.map((list, index) => (\n          <h1 key={index} className=\"col-sm-12 col-md-6 col-lg-4\">\n            <span className=\"badge badge-mine\">\n              <div className=\"name\">{list.Name}</div>\n              <div className=\"value\">\n                {getCurrencySymbol()}\n                {list.Value}\n              </div>\n            </span>\n          </h1>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default CurrencyLabel;\n","import React from \"react\";\nimport CurrencyLabel from \"./CurrencyLabel\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./CurrencySelect.css\";\n\nclass CurrencySelect extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currency: \"USD\", //default state\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  //trigger when select currency\n  handleChange(e) {\n    // console.log(\"currency selected\");\n    this.setState({ currency: e.target.value });\n  }\n\n  render() {\n    return (\n      <div>\n        <select\n          className=\"select-container\"\n          value={this.state.currency}\n          onChange={this.handleChange}\n        >\n          <option value=\"USD\">USD$</option>\n          <option value=\"EUR\">EUR€</option>\n          <option value=\"CAD\">CAD$</option>\n        </select>\n        <CurrencyLabel currency={this.state.currency} />\n      </div>\n    );\n  }\n}\n\nexport default CurrencySelect;\n","import React from \"react\";\nimport \"./App.css\";\nimport CurrencySelect from \"./components/CurrencySelect\";\n\nfunction App() {\n  return (\n    <div>\n      <CurrencySelect />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}